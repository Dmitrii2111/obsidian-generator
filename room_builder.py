import pandas as pd
from pathlib import Path
from config import ENCODING
from file_utils import sanitize_filename
from content_generator import render_group_by_type

def get_safe_name(value, default):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏"""
    if value is None or (hasattr(pd, 'isna') and pd.isna(value)):
        return default
    return str(value)

def get_safe_value(value, default):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è"""
    if value is None or (hasattr(pd, 'isna') and pd.isna(value)):
        return default
    return str(value)

def get_room_name(row):
    """–ü–æ–ª—É—á–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è"""
    room_num = get_safe_value(row.get("–ü–û–ú"), "")
    room_name = get_safe_value(row.get("–ü–û–ú_–ù–ê–ò–ú", ""), "")
    
    if room_num and room_name:
        return f"{room_num} ‚Äî {room_name}"
    elif room_num:
        return room_num
    else:
        return "‚Äî"

def create_room_file(room_file, dept_name, group_data):
    """–°–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª –ø–æ–º–µ—â–µ–Ω–∏—è"""
    first_row = group_data.iloc[0]
    
    floor = get_safe_value(first_row.get("–≠–¢–ê–ñ"), "‚Äî")
    department = get_safe_value(first_row.get("–û–¢–î–ï–õ"), "‚Äî")
    room = get_room_name(first_row)
    
    content = render_group_by_type(group_data)
    
    md_content = f"""---
—ç—Ç–∞–∂: "{floor}"
–æ—Ç–¥–µ–ª: "{department}"
–ø–æ–º–µ—â–µ–Ω–∏–µ: "{room}"
status: ‚ùå –ù–µ –ø—Ä–∏—Å—Ç—É–ø–∞–ª–∏
---

{content}
[[{dept_name}]]
"""
    
    with open(room_file, "w", encoding=ENCODING) as f:
        f.write(md_content)
    
    return room_file

def process_rooms(dept_folder, dept_name, dept_group):
    """–°–æ–∑–¥–∞–µ—Ç –ø–æ–º–µ—â–µ–Ω–∏—è –≤ –æ—Ç–¥–µ–ª–µ–Ω–∏–∏"""
    created_files = []
    
    for nom_value, group in dept_group.groupby("–ù–û–ú", dropna=False):
        room_name = get_safe_name(nom_value, "–ë–µ–∑_–∫–æ–¥–∞")
        room_file = dept_folder / f"{sanitize_filename(room_name)}.md"
        
        create_room_file(room_file, dept_name, group)
        created_files.append(room_file)
        
        print(f"    üö™ –ü–æ–º–µ—â–µ–Ω–∏–µ: {room_name}")
    
    return created_files