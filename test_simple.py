from pathlib import Path
import pandas as pd
from config import EXCEL_PATH, SHEET_NAME, VAULT_PATH, ENCODING
from file_utils import sanitize_filename, clear_folder
from excel_processor import load_excel_data, check_data_structure
from content_generator import render_group_by_type

def test_excel_loading():
    """–¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ Excel"""
    print("üß™ –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ Excel —Ñ–∞–π–ª–∞...")
    
    try:
        df = load_excel_data()
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ! –†–∞–∑–º–µ—Ä: {df.shape[0]} —Å—Ç—Ä–æ–∫, {df.shape[1]} –∫–æ–ª–æ–Ω–æ–∫")
        return df
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

def test_data_structure(df):
    """–¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüß™ –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        check_data_structure(df)
        print("‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        
        # –ü–æ–∫–∞–∂–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–∞–Ω–Ω—ã—Ö
        print(f"üìã –ö–æ–ª–æ–Ω–∫–∏: {list(df.columns)}")
        print(f"üè¢ –≠—Ç–∞–∂–∏: {df['–≠–¢–ê–ñ'].unique()}")
        print(f"üè• –û—Ç–¥–µ–ª–µ–Ω–∏—è: {df['–û–¢–î–ï–õ'].unique()[:3]}")  # –ü–µ—Ä–≤—ã–µ 3
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_content_generation(df):
    """–¢–µ—Å—Ç 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    print("\nüß™ –¢–µ—Å—Ç 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞...")
    
    try:
        # –í–æ–∑—å–º–µ–º –ø–µ—Ä–≤—É—é –≥—Ä—É–ø–ø—É –¥–ª—è —Ç–µ—Å—Ç–∞
        first_floor = df['–≠–¢–ê–ñ'].iloc[0] if not df.empty else None
        test_group = df[df['–≠–¢–ê–ñ'] == first_floor].head(3)
        
        content = render_group_by_type(test_group)
        print(f"‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω ({len(content)} —Å–∏–º–≤–æ–ª–æ–≤)")
        print(f"üìù –ü—Ä–µ–≤—å—é: {content[:200]}...")
        
        return content
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

def test_file_creation(df, content):
    """–¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤"""
    print("\nüß™ –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤...")
    
    try:
        # –û—á–∏—â–∞–µ–º –ø–∞–ø–∫—É
        clear_folder(VAULT_PATH)
        print(f"‚úÖ –ü–∞–ø–∫–∞ –æ—á–∏—â–µ–Ω–∞: {VAULT_PATH}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        test_file = VAULT_PATH / "test_file.md"
        
        with open(test_file, "w", encoding=ENCODING) as f:
            f.write("# –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª\n\n")
            f.write("## –î–∞–Ω–Ω—ã–µ –∏–∑ Excel\n\n")
            f.write(content)
        
        print(f"‚úÖ –§–∞–π–ª —Å–æ–∑–¥–∞–Ω: {test_file}")
        
        # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫
        test_folder = VAULT_PATH / "test_folder"
        test_folder.mkdir(exist_ok=True)
        
        sub_file = test_folder / "sub_test.md"
        with open(sub_file, "w", encoding=ENCODING) as f:
            f.write("# –í–ª–æ–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª\n\n–¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫")
        
        print(f"‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫ —Å–æ–∑–¥–∞–Ω–∞")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ Excel
    df = test_excel_loading()
    if df is None:
        return
    
    # –¢–µ—Å—Ç 2: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
    if not test_data_structure(df):
        return
    
    # –¢–µ—Å—Ç 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    content = test_content_generation(df)
    if content is None:
        return
    
    # –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    if not test_file_creation(df, content):
        return
    
    print("\n" + "=" * 50)
    print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
    print("üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –ø–∞–ø–∫–µ: output/test_vault")
    print("üëâ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–æ–ª–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é")

if __name__ == "__main__":
    main()